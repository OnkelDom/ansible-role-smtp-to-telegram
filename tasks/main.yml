---
- name: create system group
  group:
    name: "{{ smtp_to_telegram_system_group }}"
    system: true
    state: present
  when: smtp_to_telegram_system_group != "root"
  become: true
  tags: smtp_to_telegram

- name: create system user
  user:
    name: "{{ smtp_to_telegram_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ smtp_to_telegram_system_group }}"
    createhome: false
  when: smtp_to_telegram_system_user != "root"
  become: true
  tags: smtp_to_telegram

- name: check if is installed
  stat:
    path: "{{ smtp_to_telegram_binary_install_dir }}/smtp_to_telegram"
  register: __smtp_to_telegram_is_installed
  become: true
  tags: smtp_to_telegram

- name: gather currently installed version
  command: "{{ smtp_to_telegram_binary_install_dir }}/smtp_to_telegram --version"
  args:
    warn: false
  changed_when: false
  register: __smtp_to_telegram_current_version_output
  when: __smtp_to_telegram_is_installed.stat.exists
  become: true
  tags: smtp_to_telegram

- block:
  - name: get checksum list from github
    set_fact:
      _checksums: "{{ lookup('url', 'https://github.com/OnkelDom/smtp-to-telegram/releases/download/v' + smtp_to_telegram_version + '/checksums.txt', wantlist=True) | list }}"
    environment: "{{ proxy_env }}"
    run_once: true
    become: true
    tags: smtp_to_telegram

  - name: "get checksum for {{ go_arch }} architecture"
    set_fact:
      smtp_to_telegram_checksum: "{{ item.split(' ')[0] }}"
    with_items: "{{ _checksums }}"
    when: "('smtp-to-telegram_' + smtp_to_telegram_version + '_linux_' + go_arch + '.tar.gz') in item"
    become: true
    tags: smtp_to_telegram

  - name: download binary to local folder
    get_url:
      url: "https://github.com/OnkelDom/smtp-to-telegram/releases/download/v{{ smtp_to_telegram_version }}/smtp-to-telegram_{{ smtp_to_telegram_version }}_linux_{{ go_arch }}.tar.gz"
      dest: "/tmp/smtp_to_telegram-{{ smtp_to_telegram_version }}.linux-{{ go_arch }}.tar.gz"
      checksum: "sha256:{{ smtp_to_telegram_checksum }}"
    environment: "{{ proxy_env }}"
    register: _download_archive
    until: _download_archive is succeeded
    retries: 5
    delay: 2
    delegate_to: localhost
    check_mode: false
    become: true
    tags: smtp_to_telegram

  - name: unpack binaries
    unarchive:
      src: "/tmp/smtp_to_telegram-{{ smtp_to_telegram_version }}.linux-{{ go_arch }}.tar.gz"
      dest: "/tmp"
    delegate_to: localhost
    check_mode: false
    become: true
    tags: smtp_to_telegram

  - name: propagate console-templates
    copy:
      src: "/tmp/{{ item }}"
      dest: "{{ smtp_to_telegram_binary_install_dir }}/{{ item }}"
      mode: 0755
      owner: "root"
      group: "root"
    with_items:
      - smtp_to_telegram
    notify: restart smtp_to_telegram
    become: true
    tags: smtp_to_telegram
  when: (not __smtp_to_telegram_is_installed.stat.exists) or (__smtp_to_telegram_current_version_output.stdout.split(" ")[2] != smtp_to_telegram_version)

- name: create systemd service unit
  template:
    src: smtp_to_telegram.service.j2
    dest: /etc/systemd/system/smtp_to_telegram.service
    owner: root
    group: root
    mode: 0644
  notify: restart smtp_to_telegram
  become: true
  tags: smtp_to_telegram

- name: ensure service is started and enabled
  systemd:
    daemon_reload: true
    name: smtp_to_telegram
    state: started
    enabled: true
  become: true
  tags: smtp_to_telegram